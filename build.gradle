plugins {
    id "dev.architectury.loom" version "1.6-SNAPSHOT"
    id "maven-publish"
}

base {
    archivesName = project.archives_base_name
}

version = project.mod_version
group = project.maven_group

java {
    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17
}

loom {
    silentMojangMappingsLicense()

    forge {
        mixinConfigs = [
                "mixins.satin.client.json"
        ]
    }

    accessWidenerPath = file("src/main/resources/satin.accesswidener")
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven {
        name = "CottonMC"
        url = "https://server.bbkr.space/artifactory/libs-release"
    }
    maven {
        url "https://maven.su5ed.dev/releases"
    }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        url "https://maven.su5ed.dev/releases"
    }
}

dependencies {
    // to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    forge "net.minecraftforge:forge:${project.forge_version}"

    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    modCompileOnly ("dev.su5ed.sinytra.fabric-api:fabric-api:0.91.0+1.10.8+1.20.1")
    modRuntimeOnly ("dev.su5ed.sinytra.fabric-api:fabric-api:0.91.0+1.10.8+1.20.1")

    compileOnly "org.jetbrains:annotations:${jb_annotations_version}"
    compileOnly "com.google.code.findbugs:jsr305:${findbugs_version}"
    compileOnly "org.apiguardian:apiguardian-api:${apiguardian_version}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:5.4.0-M1"

}

processResources {
    // define properties that can be used during resource processing
    inputs.property "version", project.version
    inputs.property("fabric_api_version", project.fabric_version)

    // this will replace the property "${version}" in your mods.toml
    // with the version you've defined in your gradle.properties
    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    options.encoding = "UTF-8"
    options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    // add some additional metadata to the jar manifest
    manifest {
        attributes([
                "Specification-Title"     : project.mod_id,
                "Specification-Vendor"    : project.mod_author,
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : version,
                "Implementation-Vendor"   : project.mod_author,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

